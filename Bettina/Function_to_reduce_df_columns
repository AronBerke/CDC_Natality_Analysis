def create_reduced_df (df, list_to_drop):

    '''
    Function to choose columns from dataframe for label encoding. Takes the data frame and the columns to drop
    as a list.
    '''

    import pandas as pd
    import numpy as np

    # create list of flags, territory info and imputed info likely to be dropped together
    flags = list(filter(lambda i: re.search('\AF_',i) , df.columns))
    territory_info = ['OCTERR','OCNTYFIPS', 'OCNTYPOP', 'MBCNTRY', 'MRCNTRY', 'MRTERR', 'RCNTY', 'RCNTY_POP', 'RCNTY_POP',
                 'RCITY_POP', 'RECTYPE']
    imputed_info = ['MAGE_IMPFLG', 'MAGE_REPFLG', 'MRACEIMP','MAR_IMP', 'FAGERPT_FLG', 'IMP_PLUR', 'IMP_SEX',
                'COMPGST_IMP', 'OBGEST_FLG', 'LMPUSED']

    # create a copy of dataframe
    df2 = df.copy()

    # compare columns in case they have already been dropped in the input df
    

    # drop columns
    for feature in list_to_drop:
        #if ~feature.isin(df2.colunms):
        #    except ValueError:
        #    print("Column name does not exist")
        elif feature == 'flag':
            df2.drop(flags, inplace = True, axis=1)
        elif feature == 'territory':
            df2.drop(territory_info, inplace = True, axis=1)
        elif feature == 'imputed':
            df2.drop(imputed_info, inplace = True, axis=1)
        else:
            df2.drop(feature, inplace = True, axis=1)

    return df2
