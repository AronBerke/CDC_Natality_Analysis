# -*- coding: utf-8 -*-
"""combiningyears.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O2VSB7BlH36lThygtPM2CjCjViUsjEWu
"""

import pandas as pd
import numpy as np

# cdc2018 = pd.read_csv('cdc2018trimmed2.csv')
# cdc2017 = pd.read_csv('CDC2017trimmed.csv')
# cdc2016 = pd.read_csv('CDC2016trimmed.csv')
wolabor2018 = pd.read_csv('cdc2018wolabor.csv')
wolabor2017 = pd.read_csv('CDC2017wolabor.csv')
wolabor2016 = pd.read_csv('CDC2016wolabor.csv')

# function to split out holdout test set
def split_sets(dataframe, seed, test_prop=0.1): 
    '''
    - A function that splits specifically a dataframe into a train and test portion
    - Requires multiple assignment: train, test
    ---------------
    - dataframe: dataframe to be split
    - seed: set seed for reproducability
    - test_prop: takes a float - proportion of dataframe that should be allocated to the test set
    '''

    np.random.seed(seed)
    testIdxes = np.random.choice(range(0,dataframe.shape[0]), size=round(dataframe.shape[0]*test_prop), replace=False)
    trainIdxes = list(set(range(0,dataframe.shape[0])) - set(testIdxes))

    train = dataframe.iloc[trainIdxes,:]
    test  = dataframe.iloc[testIdxes,:]
    
    return train, test

train2018, test2018 = split_sets(wolabor2018, 0, test_prop=0.1)
train2017, test2017 = split_sets(wolabor2017, 0, test_prop=0.1)
train2016, test2016 = split_sets(wolabor2016, 0, test_prop=0.1)

cdcfull = test2018.append(pd.DataFrame(data = test2017), ignore_index=True)

cdcfull = cdcfull.append(pd.DataFrame(data = test2016), ignore_index=True)

cdcfull.to_csv('cdc3yearswolabor_tenpercent.csv')